(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[235],{2081:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>c});var r=s(5155),a=s(6766),n=s(6874),i=s.n(n),l=s(9432),o=s(9911);function c(){let e="Custom Raytracing Projects",t=[{name:"C++",icon:(0,r.jsx)(l.Qin,{})},{name:"OpenGL",icon:(0,r.jsx)(l.SHf,{})},{name:"Low-Level Rendering",icon:(0,r.jsx)(o.FSj,{})}];return(0,r.jsxs)("main",{className:"min-h-screen bg-white px-6 py-12 font-sans",children:[(0,r.jsx)("h1",{className:"text-4xl font-bold text-center mb-6 text-stone-700",children:e}),(0,r.jsx)("div",{className:"relative w-full max-w-4xl mx-auto h-[600px] rounded-xl overflow-hidden shadow-lg mb-8",children:(0,r.jsx)(a.default,{src:"/Raytrace.png",alt:e,fill:!0,unoptimized:!0,className:"object-cover",priority:!0})}),(0,r.jsx)("p",{className:"text-lg text-stone-700 leading-relaxed mb-10 text-center max-w-3xl mx-auto whitespace-pre-line",children:"This project showcases a series of raytracers I built from scratch during my academic journey. I implemented both CPU-based and GPU-accelerated versions to simulate realistic lighting, shadows, motion blur, reflections, and materials. The project taught me key graphics concepts like ray-sphere intersection, diffractions, recursion for reflections, and pixel shaders.\n\nIn other projects I also experimented with OpenGL where I made rasterizations instead of ray tracing. This taught me about manipulating projection matrices, using multivariable calculus, and learning about how computer graphics work."}),(0,r.jsxs)("section",{className:"mb-12",children:[(0,r.jsx)("h2",{className:"text-xl font-semibold text-stone-700 mb-4 text-center",children:"Technologies Used"}),(0,r.jsx)("div",{className:"flex flex-wrap justify-center gap-4",children:t.map(e=>(0,r.jsxs)("div",{className:"flex flex-col items-center p-4 border rounded-lg shadow hover:shadow-md transition",children:[(0,r.jsx)("div",{className:"text-3xl text-blue-600",children:e.icon}),(0,r.jsx)("span",{className:"text-sm mt-2 text-stone-700",children:e.name})]},e.name))})]}),(0,r.jsxs)("div",{className:"flex flex-col sm:flex-row justify-center gap-4",children:[(0,r.jsx)(i(),{href:"/",className:"px-6 py-2 bg-gray-200 hover:bg-gray-300 rounded-lg text-sm font-medium text-stone-700 text-center",children:"Go Back"}),(0,r.jsx)("a",{href:"https://github.com/RaulV-V/Raytrace",target:"_blank",rel:"noopener noreferrer",className:"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm font-medium text-center",children:"View Code"}),(0,r.jsx)("a",{href:"https://github.com/RaulV-V/GraphicsLearning",target:"_blank",rel:"noopener noreferrer",className:"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm font-medium text-center",children:"View Other Graphics Projects"})]})]})}},9065:(e,t,s)=>{Promise.resolve().then(s.bind(s,2081))}},e=>{e.O(0,[362,711,874,751,441,964,358],()=>e(e.s=9065)),_N_E=e.O()}]);